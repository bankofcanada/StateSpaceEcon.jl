# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ "*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    strategy: 
      matrix:
        julia-version: ["1.7", "1.8", "1.9"]
        julia-arch: [x64]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        # You may pin to the exact commit or the version.
        # uses: julia-actions/setup-julia@ee66464cb7897ffcc5322800f4b18d449794af30
        uses: julia-actions/setup-julia@v2
        with:
          # The Julia version to download (if necessary) and use. Example: 1.0.4
          version: ${{ matrix.julia-version }}  # optional, default is 1
          # Architecture of the Julia binaries. Defaults to x64.
          arch: ${{ matrix.julia-arch }} # optional, default is x64
          # Display InteractiveUtils.versioninfo() after installing
          show-versioninfo: true # optional, default is false

      - name: Run Julia package tests
        # You may pin to the exact commit or the version.
        # uses: julia-actions/julia-runtest@eda4346d69c0d1653e483c397a83c7f32f4ef2ac
        uses: julia-actions/julia-runtest@v1
        with:
          # Value determining whether to test with coverage or not. Options: true | false. Default value: true.
          coverage: true # optional, default is true
          # Value passed to the --depwarn flag. Options: yes | no | error. Default value: yes.
          depwarn: yes # optional, default is yes
          # If true, then, for each [compat] entry in the active project, only allow the latest compatible version. If the value is auto and the pull request has been opened by Dependabot or CompatHelper, then force_latest_compatible_version will be set to true, otherwise it will be set to false. Options: true | false | auto. Default value: auto.
          force_latest_compatible_version: auto # optional, default is auto
          # Value passed to the --inline flag. Options: yes | no. Default value: yes.
          inline: yes # optional, default is yes
          # Value inserted in front of the julia command, e.g. for running xvfb-run julia [...]
          # prefix: # optional, default is
          # Value passed to the --project flag. The default value is the repository root: "@."
          # project: # optional, default is @.

      # process and submit the code coverage information
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: e9844f2a-a8b6-4c59-9f20-1c5a33ad9dbf
          verbose: true # optional (default = false)
          
